{"ast":null,"code":"var _jsxFileName = \"/home/nawazz/golang/codedamn projects/quizappreact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\nimport Quiz from './components/Quiz';\nimport EndScreen from './components/EndScreen';\nimport { GameStateContext } from './helpers/Contexts'; // ['menu', 'playing', 'finished']\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gameState, setGameState] = useState('menu');\n  const [userName, setUserName] = useState('');\n  const [score, setScore] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Quiz App \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(GameStateContext.Provider, {\n      value: {\n        gameState,\n        setGameState,\n        userName,\n        setUserName,\n        score,\n        setScore\n      },\n      children: [gameState === \"menu\" && /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 37\n      }, this), gameState === \"playing\" && /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this), gameState === \"finished\" && /*#__PURE__*/_jsxDEV(EndScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"ZaUsIhNsn1vzKeoWh+uXn0s9g5M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Menu","Quiz","EndScreen","GameStateContext","App","gameState","setGameState","userName","setUserName","score","setScore"],"sources":["/home/nawazz/golang/codedamn projects/quizappreact/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nimport './App.css'\nimport Menu from './components/Menu'\nimport Quiz from './components/Quiz'\nimport EndScreen from './components/EndScreen'\n\nimport {GameStateContext} from './helpers/Contexts'\n\n// ['menu', 'playing', 'finished']\nfunction App() {\n\n    const[gameState, setGameState] = useState('menu')\n    const [userName, setUserName] = useState('')\n    const [score, setScore] = useState(0)\n\n\n\treturn (\n\t\t<div className=\"App\">\n           <h1> Quiz App </h1>\n           <GameStateContext.Provider value={{gameState, setGameState,userName, setUserName, score, setScore}}>\n            {gameState=== \"menu\" && <Menu />}\n            {gameState=== \"playing\" && <Quiz />}\n            {gameState=== \"finished\" && <EndScreen />}\n\n           </GameStateContext.Provider>\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAAQC,gBAAR,QAA+B,oBAA/B,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAK,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,MAAD,CAAzC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;EAGH,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,wBACS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADT,eAES,QAAC,gBAAD,CAAkB,QAAlB;MAA2B,KAAK,EAAE;QAACM,SAAD;QAAYC,YAAZ;QAAyBC,QAAzB;QAAmCC,WAAnC;QAAgDC,KAAhD;QAAuDC;MAAvD,CAAlC;MAAA,WACEL,SAAS,KAAI,MAAb,iBAAuB,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADzB,EAEEA,SAAS,KAAI,SAAb,iBAA0B,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAF5B,EAGEA,SAAS,KAAI,UAAb,iBAA2B,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAH7B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFT;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAWA;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}