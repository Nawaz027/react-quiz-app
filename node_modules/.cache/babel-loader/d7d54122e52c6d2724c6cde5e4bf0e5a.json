{"ast":null,"code":"var _jsxFileName = \"/home/nawazz/golang/codedamn projects/quizappreact/src/components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport { Questions } from '../helpers/Questions';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { GameStateContext } from \"../helpers/Contexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n  const {\n    score,\n    setScore,\n    gameState,\n    setGameState\n  } = useContext(GameStateContext);\n\n  const chooseOption = option => {\n    setOptionChosen(option);\n  };\n\n  const nextQuestion = () => {\n    if (Questions[currentQuestion].answer === optionChosen) {\n      setScore(score + 1);\n      setCurrentQuestion(currentQuestion + 1);\n    }\n\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currentQuestion].prompt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption('optionA');\n        },\n        children: [\" \", Questions[currentQuestion].optionA]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption('optionB');\n        },\n        children: [\" \", Questions[currentQuestion].optionB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption('optionC');\n        },\n        children: [\" \", Questions[currentQuestion].optionC]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          chooseOption('optionD');\n        },\n        children: [\" \", Questions[currentQuestion].optionD]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), currentQuestion === Questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextQuestion,\n      children: \" Finish Quiz \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextQuestion,\n      children: \" Next Question \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Quiz, \"eImUMlcrmX5GPWTlKIBBgA9Wyd0=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["Questions","useState","useContext","GameStateContext","Quiz","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","score","setScore","gameState","setGameState","chooseOption","option","nextQuestion","answer","prompt","optionA","optionB","optionC","optionD","length"],"sources":["/home/nawazz/golang/codedamn projects/quizappreact/src/components/Quiz.js"],"sourcesContent":["import \"../App.css\";\nimport { Questions } from '../helpers/Questions'\nimport { useState } from 'react'\nimport { useContext } from 'react'\nimport { GameStateContext } from \"../helpers/Contexts\"\n\n\nfunction Quiz() {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [optionChosen, setOptionChosen] = useState(\"\")\n    const {score, setScore, gameState, setGameState} = useContext(GameStateContext);\n\n\n    const chooseOption = (option) => {\n        setOptionChosen(option)\n    }\n\n    const nextQuestion = () => {\n        if (Questions[currentQuestion].answer === optionChosen) {\n            setScore(score + 1);\n            setCurrentQuestion(currentQuestion+1);\n        }\n        setCurrentQuestion(currentQuestion+1)\n       \n    }\n\n\n    return (\n        <div>\n            <h1>{Questions[currentQuestion].prompt}</h1>\n            <div className=\"questions\">\n                <button onClick={() => {chooseOption('optionA')}}> {Questions[currentQuestion].optionA}</button>\n                <br></br>\n                <button onClick={() => {chooseOption('optionB')}}> {Questions[currentQuestion].optionB}</button>\n                <br></br>\n                <button onClick={() => {chooseOption('optionC')}}> {Questions[currentQuestion].optionC}</button>\n                <br></br>\n                <button onClick={() => {chooseOption('optionD')}}> {Questions[currentQuestion].optionD}</button>\n                <br></br>\n            </div>\n            {currentQuestion === Questions.length - 1 ?\n            (<button onClick={nextQuestion}> Finish Quiz </button>)\n                : (<button onClick={nextQuestion}> Next Question </button>)\n            }\n            \n        </div>\n    )\n}\n\nexport default Quiz"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,SAAT,QAA0B,sBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;;AAGA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,CAAD,CAAtD;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM;IAACQ,KAAD;IAAQC,QAAR;IAAkBC,SAAlB;IAA6BC;EAA7B,IAA6CV,UAAU,CAACC,gBAAD,CAA7D;;EAGA,MAAMU,YAAY,GAAIC,MAAD,IAAY;IAC7BN,eAAe,CAACM,MAAD,CAAf;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIf,SAAS,CAACK,eAAD,CAAT,CAA2BW,MAA3B,KAAsCT,YAA1C,EAAwD;MACpDG,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACAH,kBAAkB,CAACD,eAAe,GAAC,CAAjB,CAAlB;IACH;;IACDC,kBAAkB,CAACD,eAAe,GAAC,CAAjB,CAAlB;EAEH,CAPD;;EAUA,oBACI;IAAA,wBACI;MAAA,UAAKL,SAAS,CAACK,eAAD,CAAT,CAA2BY;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAQ,OAAO,EAAE,MAAM;UAACJ,YAAY,CAAC,SAAD,CAAZ;QAAwB,CAAhD;QAAA,gBAAoDb,SAAS,CAACK,eAAD,CAAT,CAA2Ba,OAA/E;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,OAAO,EAAE,MAAM;UAACL,YAAY,CAAC,SAAD,CAAZ;QAAwB,CAAhD;QAAA,gBAAoDb,SAAS,CAACK,eAAD,CAAT,CAA2Bc,OAA/E;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAQ,OAAO,EAAE,MAAM;UAACN,YAAY,CAAC,SAAD,CAAZ;QAAwB,CAAhD;QAAA,gBAAoDb,SAAS,CAACK,eAAD,CAAT,CAA2Be,OAA/E;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI;QAAQ,OAAO,EAAE,MAAM;UAACP,YAAY,CAAC,SAAD,CAAZ;QAAwB,CAAhD;QAAA,gBAAoDb,SAAS,CAACK,eAAD,CAAT,CAA2BgB,OAA/E;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ,eAQI;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAYKhB,eAAe,KAAKL,SAAS,CAACsB,MAAV,GAAmB,CAAvC,gBACA;MAAQ,OAAO,EAAEP,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,gBAEM;MAAQ,OAAO,EAAEA,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdX;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH;;GAxCQX,I;;KAAAA,I;AA0CT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}